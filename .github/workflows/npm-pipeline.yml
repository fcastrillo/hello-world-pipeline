# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Node.js Package

on:
  push:
  pull_request:
    branches: [master]
  release:
    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 12
      - run: npm ci
      - run: npm test

  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY_DEC }}
          service_account_email: ${{ secrets.GKE_EMAIL }}
          project_id: ${{ secrets.PROJECT_ID }}

      - name: Configure Docker
        run: gcloud auth configure-docker --quiet

      - name: Build
        run: |-
          docker build \
            --tag "gcr.io/${{ secrets.PROJECT_ID }}/hello:${{ github.sha  }}" \
            --build-arg GITHUB_SHA="${{ github.sha }}" \
            --build-arg GITHUB_REF="${{ github.ref  }}" \
            .

      - name: Publish
        run: |-
          docker push \
            "gcr.io/${{ secrets.PROJECT_ID }}/hello:${{ github.sha }}"

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    env:
      IMAGE_NAME: gcr.io/${{ secrets.PROJECT_ID }}/hello:${{ github.sha  }}
      PORT: 3000
    steps:
      - name: Check Out
        uses: actions/checkout@v2

        # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY_DEC }}
          service_account_email: ${{ secrets.GKE_EMAIL }}
          project_id: ${{ secrets.PROJECT_ID }}

      - name: Create cluster
      #  run: gcloud run deploy ${{ secrets.PROJECT_ID }} --image $IMAGE_NAME --port $PORT --platform managed --region us-central1
      #          gcloud container clusters create cluster-for-simple-app --zone=us-east1-c --project=${{ secrets.PROJECT_ID }}
        run: |-
          gcloud container clusters get-credentials demo-cluster --zone=us-east1-c
          sed -i "s|{{ image }}|gcr.io/${{ secrets.PROJECT_ID }}/hello:${{ github.sha  }}|g" deployment.yml
          kubectl apply -f deployment.yml
